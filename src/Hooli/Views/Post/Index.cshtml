@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
     ViewBag.Title = "Post";
}

@model Hooli.Models.PostViewModel

<div class="row">

    @if (Model.post.Group != null)
    {
        <div class="col-md-4">
            <div class="content-box padding-remove-sides">
                <div class="info-photo-container">
                    @if (Model.post.Group.Image != null)
                     {   
                        <div class="info-photo" style="background: url(@Model.post.Group.Image) center / cover;">
                            <div class="info-photo-shade">
                                <a asp-controller="Group" asp-action="SingleGroup" asp-route-id="@Model.post.Group.GroupId"><h1>@Model.post.Group.GroupName</h1></a>
                            </div>
                        </div>
                    }
                    @if (Model.post.Group.Image == null)
                     {
                        <div class="info-photo" style="background: url(@Url.Content("~/images/hooli_groupphoto_default.jpg")) center / cover;">
                            <div class="info-photo-shade">
                                <a asp-controller="Group" asp-action="SingleGroup" asp-route-id="@Model.post.Group.GroupId"><h1>@Model.post.Group.GroupName</h1></a>
                            </div>
                        </div>
                    }

                </div>
                <div class="group-info padding-side">
                    <p class="group-info-description">
                        @Model.post.Group.Description
                    </p>
                    @if (Model.JoinedGroup.Contains(Model.post.Group.GroupId))
                     {
                        <button type="button" data-id="@Model.post.Group.GroupId" data-url="/Manage/UnfollowGroup" class="btn btn-primary btn-block btn-option btn-follow btn-trans">
                            <span>Unfollow</span>
                        </button>
                    }
                    else
                    {
                        <button type="button" data-id="@Model.post.Group.GroupId" data-url="/Manage/FollowGroup" class="btn btn-primary btn-block btn-follow btn-trans">
                            <span>Follow</span>
                        </button>
                    }

                </div>
            </div>
        </div>


    }
    else if (Model.post.User != null)
    {
        <div class="col-md-4">
            <div class="content-box padding-remove-sides">
                <div class="info-photo-container">
                    <div class="info-photo info-photo-user" style="background: url(@Model.post.User.ProfilePicture) center / cover;">
                        <div class="info-photo-shade">
                            <a asp-controller="Profile" asp-action="Index" asp-route-id="@Model.post.User.UserName"><h1>@Model.post.User.FirstName @Model.post.User.LastName</h1></a>
                        </div>
                    </div>
                </div>
                <div class="profile-info row">
                    <div class="form-group clear">
                        <label class="col-xs-3 col-md-4 col-lg-3 control-label">Full name</label>
                        <div class="col-xs-9 col-md-8 col-lg-9">
                            <span>@Model.post.User.FirstName @Model.post.User.LastName</span>
                        </div>
                    </div>
                    <div class="form-group clear">
                        <label class="col-xs-3 col-md-4 col-lg-3 control-label">Age</label>
                        <div class="col-xs-9 col-md-8 col-lg-9">
                            <span>@Model.post.User.DateOfBirth</span>
                        </div>
                    </div>

                    <div class="form-group clear">
                        <label class="col-xs-3 col-md-4 col-lg-3 control-label">Username</label>
                        <div class="col-xs-9 col-md-8 col-lg-9">
                            <span>@Model.post.User.UserName</span>
                        </div>
                    </div>
                </div>
                <div class="profile-buttons padding-side margin-top">
                    @if (Model.FollowingPerson.Contains(Model.post.User.Id))
                    {
                        <button type="button" data-id="@Model.post.User.Id" data-url="/Manage/UnfollowUser" class="btn btn-primary btn-block btn-option btn-follow btn-trans">
                            <span>Unfollow</span>
                        </button>
                    }
                    else
                    {
                        <button type="button" data-id="@Model.post.User.Id" data-url="/Manage/FollowUser" class="btn btn-primary btn-block btn-follow btn-trans">
                            <span>Follow</span>
                        </button>
                    }
                </div>
            </div>
        </div>

    }


    <div class="col-md-8">
        <div class="content-box">
            <div class="view-post">
                <div class="mod-controls">
                    <button type="button" onclick="location.href='@Url.Action("Edit", "Post",  new { id = Model.post.PostId })'" class="btn btn-primary btn-xs btn-2way">
                        <span>Edit</span>
                    </button>
                    <form asp-controller="Post" asp-action="Delete" asp-route-id="@Model.post.PostId" method="post">
                    <button type="submit" class="btn btn-danger btn-xs btn-2way">
                        <span>Delete</span>
                    </button>
                    </form>
                </div>
                <div class="post-rating">
                    <button type="submit" class="btn btn-link vote">
                        <span class="glyphicon glyphicon-menu-up"></span>
                    </button>
                    <div class="post-rating-count">@Model.post.Points</div>
                    <button type="submit" class="btn btn-link vote">
                        <span class="glyphicon glyphicon-menu-down"></span>
                    </button>
                </div>
                @if (Model.post.Image != null)
                {
                        <a class="image-link" href="@Model.post.Image">
                            <div class="photo-sm margin-top" style="background: url(@Model.post.Image) center / cover;"></div>
                        </a>
                }
                else if (Model.post.Link != null)
                {
                        <a class="image-link" href="@Model.post.Link">
                            <div class="photo-sm margin-top" style="background: url(@Model.post.Link) center / cover;"></div>
                        </a>
                }

                <h1>@Model.post.Title</h1>
                <p class="post-body-info">
                    <span class="post-author">Posted by <a href="#"><strong>@Model.post.User.FirstName</strong></a></span>
                    <span class="post-date"> on <strong>@Model.post.DateCreated.ToString("MMM dd, yyy @ HH:mm")</strong>.</span>
                </p>
                <p>
                        @Model.post.Text               
                 </p>
            </div>
            <button type="button" class="btn btn-primary btn-block" id="button-comment-to-post">
                <span>Leave a comment</span>
            </button>
            <div class="reply-to-post margin-top slider">
                    <div class="form-group margin-b-no">
                        <textarea class="form-control full-width" id="post_body" placeholder="Type your reply."></textarea>
                    </div>
                    <div class="form-group">
                        <button type="button"data-GroupId="@Model.post.GroupGroupId" data-ParentId="@Model.post.PostId" class="btn btn-primary btn-block">Reply!</button>
                    </div>
            </div>
            <div class="post-comments clearfix sep-top">
                <h2>Comments</h2>

                @Html.Partial("_CommentTree", Model)
                
            </div>
        </div>
    </div>
</div>
@section postcomment{
    <script>
        var MVC = (function () {
            // Takes the data which needs to be converted to form-url encoded format understadable by MVC.
            // This does not depend on jQuery. Can be used independently.
            var _stringify = function (data) {
                // This holds the stringified result.
                var result = "";

                if (typeof data !== "object") {
                    return result;
                }

                for (var element in data) {
                    if (data.hasOwnProperty(element)) {
                        result += process(element, data[element]);
                    }
                }

                // An '&' is appended at the end. Removing it.
                return result.substring(0, result.length - 1);
            }

            function process(key, value, prefix) {
                // Ignore functions.
                if (typeof value === "function") {
                    return;
                }

                if (Object.prototype.toString.call(value) === '[object Array]') {
                    var result = "";
                    for (var i = 0; i < value.length; i++) {
                        var tempPrefix = (prefix || key) + "[" + i + "]";
                        result += process(key, value[i], tempPrefix);
                    }

                    return result;
                }
                else if (typeof value === "object") {
                    var result = "";
                    for (var prop in value) {
                        // This is to prevent looping through inherited proeprties.
                        if (value.hasOwnProperty(prop)) {
                            var tempPrefix = (prefix || key) + "." + prop;
                            result += process(prop, value[prop], tempPrefix);
                        }
                    }

                    return result;
                }
                else {
                    return encodeURIComponent(prefix || key) + "=" + encodeURIComponent(value) + "&";
                }
            }

            return {
                // Converts a Json object into MVC understandable format
                // when submitted as form-url-encoded data.
                stringify: _stringify
            };
        })()
            $(".reply-to-comment button").click(function () {
                var currBtn = $(this);
                var parent = currBtn.parents().eq(4);
                var data = {
                    Name: 'PostData',
                    Text: currBtn.parent().parent().find("textarea").val(),
                    ParentId: currBtn.attr('data-ParentId'),
                    GroupId: currBtn.attr('data-GroupId')
                };

                $.post('@Url.Action("CreateComment", "Post")', MVC.stringify(data))
                    .done(function (result) {
                        if (result) {
                            $.get("/htmlTemplates/reply.html")
                                .success(function (data) {
                                    $(parent).append(data);
                                    var newComment = $(".parent-comment-container", parent).last();
                                    $(".comment-container > a", newComment).attr('href', '/Profile/Index/' + result.Username);
                                    $('.comment-container .info-photo', newComment).css('background', 'url(' + result.UserImage + ') center / cover');
                                    $('.post-author a', newComment).attr('href', '/Profile/Index/' + result.Username);
                                    $('.post-author strong', newComment).text(result.FullName);
                                    $('.post-date strong', newComment).text(result.DateCreated);
                                    $('.comment-text', newComment).text(result.Text);
                                    $('.form-group button', newComment).attr('data-parentid', result.ParentId);
                                    $('.form-group button', newComment).attr('data-groupid', result.GroupId);
                                    $(currBtn).parents().eq(1).toggleClass('open');
                                    $(newComment).show();
                                });
                        } else {

                        }
                    });
            });
        $(".reply-to-post button").click(function () {
            var currBtn = $(this);
            var data = {
                Name: 'PostData',
                Text: currBtn.parent().parent().find("textarea").val(),
                ParentId: currBtn.attr('data-ParentId'),
                GroupId: currBtn.attr('data-GroupId')
            };

            $.post('@Url.Action("CreateComment", "Post")', MVC.stringify(data))
                .done(function (result) {
                    if (result) {
                        $.get("/htmlTemplates/reply.html")
                            .success(function (data) {
                                $('.post-comments').append(data);
                                var newComment = $('.post-comments .parent-comment-container:last');
                                $(".comment-container > a", newComment).attr('href', '/Profile/Index/' + result.Username);
                                $('.comment-container .info-photo', newComment).css('background', 'url(' + result.UserImage + ') center / cover');
                                $('.post-author a', newComment).attr('href', '/Profile/Index/' + result.Username);
                                $('.post-author strong', newComment).text(result.FullName);
                                $('.post-date strong', newComment).text(result.DateCreated);
                                $('.comment-text', newComment).text(result.Text);
                                $('.form-group button', newComment).attr('data-parentid', result.ParentId);
                                $('.form-group button', newComment).attr('data-groupid', result.GroupId);
                                $(currBtn).parents().eq(1).toggleClass('open');
                                $(newComment).show();
                            });
                    } else {

                    }
                });
        });
    </script>
}